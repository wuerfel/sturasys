##############################################################################
# The main properties file to configure your application
#
# Properties can be prefixed by "%".
# "%"" matches a mode you can set as system property. For instance when you
# are using maven you can do: mvn -Dmode=test jetty:run
#
# Using that the following property:
# %test.myproperty=test property
# would overwrite the property
# myproperty=my property
#
# You can define as many environments as you want. Simply set them in the mode.
##############################################################################
application.name=ninja demo application

application.cookie.prefix=NINJA

#ISO Language Code, optionally followed by a valid ISO Country Code. 
application.languages=en,de

application.session.expire_time_in_seconds=3600
application.session.send_only_if_changed=true
application.session.transferred_over_https_only=false

##############################################################################
# Configure JPA
# simply tell Ninja which persistence unit to use.
# The persistence units are defined at META-INF/persistence.xml
##############################################################################

# when developing we are using a postgres
ninja.migration.run=true

ninja.jpa.persistence_unit_name = h2

db.connection.url=jdbc:h2:target/h2database_dev
db.connection.username=ra
db.connection.password=


# for quick and dirty testing we are uring an in memory db
%test.ninja.migration.run=true

%test.ninja.jpa.persistence_unit_name = h2

%test.db.connection.url=jdbc:h2:target/h2database_test
#%test.db.connection.username=ra
#%test.db.connection.password=


# and in production we use a perfect tuned setup for the real db servers
%prod.ninja.migration.run=true

%prod.ninja.jpa.persistence_unit_name = production

%prod.db.connection.url=jdbc:postgresql://localhost:5432/ra
%prod.db.connection.username=ra
%prod.db.connection.password=

application.secret = kAgBpLvydXfNCJ9SiMou1mHwLpsK3L0nBJ3MAir6oppxktKHYuZQZEQRobqsDM1c
